DependencyName,DependencyPath,Description,License,Md5,Sha1,Identifiers,CPE,CVE,CWE,Vulnerability,Source,CVSSv2_Severity,CVSSv2_Score,CVSSv2,CVSSv3_BaseSeverity,CVSSv3_BaseScore,CVSSv3,CPE Confidence,Evidence Count,VendorProject,Product,Name,DateAdded,ShortDescription,RequiredAction,DueDate,Notes
avro-1.9.2.jar,/home/runner/.m2/repository/org/apache/avro/avro/1.9.2/avro-1.9.2.jar,Avro core components,https://www.apache.org/licenses/LICENSE-2.0.txt,cb70195f70f52b27070f9359b77690bb,7e67193b94e45d32277ac480ea86421fd3976424,pkg:maven/org.apache.avro/avro@1.9.2,,CVE-2023-39410,CWE-502 Deserialization of Untrusted Data,"When deserializing untrusted or corrupted data, it is possible for a reader to consume memory beyond the allowed constraints and thus lead to out of memory on the system.  This issue affects Java applications using Apache Avro Java SDK up to and including 1.11.2.  Users should update to apache-avro version 1.11.3 which addresses this issue.",OSSINDEX,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H,HIGH,34,,,,,,,,
clj-async-profiler-1.0.0-alpha1.jar,/home/runner/.m2/repository/com/clojure-goes-fast/clj-async-profiler/1.0.0-alpha1/clj-async-profiler-1.0.0-alpha1.jar,Embeddable Clojure profiler (based on async-profiler),Eclipse Public License: http://www.eclipse.org/legal/epl-v10.html,ced8beb28766bfc74c02a7c30cdb2791,abcd9b1da9a5d1e1a7cdd70c3653b1a1c6ecdcab,pkg:maven/com.clojure-goes-fast/clj-async-profiler@1.0.0-alpha1,cpe:2.3:a:clojure:clojure:1.0.0:pha1:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,13,,,,,,,,
commons-compress-1.19.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar,"Apache Commons Compress software defines an API for working with compression and archive formats.  These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4, Brotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj.",https://www.apache.org/licenses/LICENSE-2.0.txt,fe897bced43468450b785b66c1cff455,7e65777fb451ddab6a9c054beb879e521b7eab78,pkg:maven/org.apache.commons/commons-compress@1.19,cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*,CVE-2021-35515,"CWE-834 Excessive Iteration, CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop')","When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,94,,,,,,,,
commons-compress-1.19.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar,"Apache Commons Compress software defines an API for working with compression and archive formats.  These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4, Brotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj.",https://www.apache.org/licenses/LICENSE-2.0.txt,fe897bced43468450b785b66c1cff455,7e65777fb451ddab6a9c054beb879e521b7eab78,pkg:maven/org.apache.commons/commons-compress@1.19,cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*,CVE-2021-35516,"CWE-130 Improper Handling of Length Parameter Inconsistency, CWE-770 Allocation of Resources Without Limits or Throttling","When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,94,,,,,,,,
commons-compress-1.19.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar,"Apache Commons Compress software defines an API for working with compression and archive formats.  These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4, Brotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj.",https://www.apache.org/licenses/LICENSE-2.0.txt,fe897bced43468450b785b66c1cff455,7e65777fb451ddab6a9c054beb879e521b7eab78,pkg:maven/org.apache.commons/commons-compress@1.19,cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*,CVE-2021-35517,"CWE-130 Improper Handling of Length Parameter Inconsistency, CWE-770 Allocation of Resources Without Limits or Throttling","When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,94,,,,,,,,
commons-compress-1.19.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar,"Apache Commons Compress software defines an API for working with compression and archive formats.  These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4, Brotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj.",https://www.apache.org/licenses/LICENSE-2.0.txt,fe897bced43468450b785b66c1cff455,7e65777fb451ddab6a9c054beb879e521b7eab78,pkg:maven/org.apache.commons/commons-compress@1.19,cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*,CVE-2021-36090,"CWE-130 Improper Handling of Length Parameter Inconsistency, NVD-CWE-Other","When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,94,,,,,,,,
commons-compress-1.19.jar,/home/runner/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar,"Apache Commons Compress software defines an API for working with compression and archive formats.  These include: bzip2, gzip, pack200, lzma, xz, Snappy, traditional Unix Compress, DEFLATE, DEFLATE64, LZ4, Brotli, Zstandard and ar, cpio, jar, tar, zip, dump, 7z, arj.",https://www.apache.org/licenses/LICENSE-2.0.txt,fe897bced43468450b785b66c1cff455,7e65777fb451ddab6a9c054beb879e521b7eab78,pkg:maven/org.apache.commons/commons-compress@1.19,cpe:2.3:a:apache:commons_compress:1.19:*:*:*:*:*:*:*,CVE-2024-25710,CWE-835 Loop with Unreachable Exit Condition ('Infinite Loop'),Loop with Unreachable Exit Condition ('Infinite Loop') vulnerability in Apache Commons Compress.This issue affects Apache Commons Compress: from 1.3 through 1.25.0.  Users are recommended to upgrade to version 1.26.0 which fixes the issue.,NVD,,,,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H/E:1.8/RC:R/MAV:A,HIGH,94,,,,,,,,
connect-api-2.8.0.jar,/home/runner/.m2/repository/org/apache/kafka/connect-api/2.8.0/connect-api-2.8.0.jar,,"The Apache Software License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0.txt",482a7fe3fbf9207eb21a450e894cdcc9,33886f7e3d640bfc867f8bb635e37e777c4161d0,pkg:maven/org.apache.kafka/connect-api@2.8.0,"cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*, cpe:2.3:a:apache:kafka_connect:2.8.0:*:*:*:*:*:*:*",CVE-2023-25194,CWE-502 Deserialization of Untrusted Data,"A possible security vulnerability has been identified in Apache Kafka Connect API. This requires access to a Kafka Connect worker, and the ability to create/modify connectors on it with an arbitrary Kafka client SASL JAAS config and a SASL-based security protocol, which has been possible on Kafka Connect clusters since Apache Kafka Connect 2.3.0. When configuring the connector via the Kafka Connect REST API, an��authenticated operator��can set the `sasl.jaas.config` property for any of the connector's Kafka clients��to ""com.sun.security.auth.module.JndiLoginModule"", which can be done via the `producer.override.sasl.jaas.config`, `consumer.override.sasl.jaas.config`, or `admin.override.sasl.jaas.config` properties. This will allow the server to connect to the attacker's LDAP server and deserialize the LDAP response, which the attacker can use to execute java deserialization gadget chains on the Kafka connect server. Attacker can cause unrestricted deserialization of untrusted data (or)��RCE vulnerability when there are gadgets in the classpath.  Since Apache Kafka 3.0.0, users are allowed to specify these properties in connector configurations for Kafka Connect clusters running with out-of-the-box configurations. Before Apache Kafka 3.0.0, users may not specify these properties unless the Kafka Connect cluster has been reconfigured with a connector client override policy that permits them.  Since Apache Kafka 3.4.0, we have added a system property (""-Dorg.apache.kafka.disallowed.login.modules"") to disable the problematic login modules usage in SASL JAAS configuration. Also by default ""com.sun.security.auth.module.JndiLoginModule"" is disabled in Apache Kafka Connect 3.4.0.   We advise the Kafka Connect users to validate connector configurations and only allow trusted JNDI configurations. Also examine connector dependencies for  vulnerable versions and either upgrade their connectors, upgrading that specific dependency, or removing the connectors as options for remediation. Finally, in addition to leveraging the ""org.apache.kafka.disallowed.login.modules"" system property, Kafka Connect users can also implement their own connector client config override policy, which can be used to control which Kafka client properties can be overridden directly in a connector config and which cannot.",NVD,,,,HIGH,8.8,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H/E:2.8/RC:R/MAV:A,HIGH,23,,,,,,,,
connect-api-2.8.0.jar,/home/runner/.m2/repository/org/apache/kafka/connect-api/2.8.0/connect-api-2.8.0.jar,,"The Apache Software License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0.txt",482a7fe3fbf9207eb21a450e894cdcc9,33886f7e3d640bfc867f8bb635e37e777c4161d0,pkg:maven/org.apache.kafka/connect-api@2.8.0,"cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*, cpe:2.3:a:apache:kafka_connect:2.8.0:*:*:*:*:*:*:*",CVE-2022-34917,"CWE-789 Memory Allocation with Excessive Size Value, CWE-770 Allocation of Resources Without Limits or Throttling","A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,23,,,,,,,,
connect-api-2.8.0.jar,/home/runner/.m2/repository/org/apache/kafka/connect-api/2.8.0/connect-api-2.8.0.jar,,"The Apache Software License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0.txt",482a7fe3fbf9207eb21a450e894cdcc9,33886f7e3d640bfc867f8bb635e37e777c4161d0,pkg:maven/org.apache.kafka/connect-api@2.8.0,"cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*, cpe:2.3:a:apache:kafka_connect:2.8.0:*:*:*:*:*:*:*",CVE-2021-38153,CWE-203 Observable Discrepancy,"Some components in Apache Kafka use `Arrays.equals` to validate a password or key, which is vulnerable to timing attacks that make brute force attacks for such credentials more likely to be successful. Users should upgrade to 2.8.1 or higher, or 3.0.0 or higher where this vulnerability has been fixed. The affected versions include Apache Kafka 2.0.0, 2.0.1, 2.1.0, 2.1.1, 2.2.0, 2.2.1, 2.2.2, 2.3.0, 2.3.1, 2.4.0, 2.4.1, 2.5.0, 2.5.1, 2.6.0, 2.6.1, 2.6.2, 2.7.0, 2.7.1, and 2.8.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A,HIGH,23,,,,,,,,
core.cache-0.7.2.jar,/home/runner/.m2/repository/org/clojure/core.cache/0.7.2/core.cache-0.7.2.jar,Cache library for Clojure.,Eclipse Public License 1.0: http://opensource.org/licenses/eclipse-1.0.php,c7ab02b9c44cb3f88185a24383d24408,e8296057e11bf37ea53dcdf50c6eeeeffbab3479,pkg:maven/org.clojure/core.cache@0.7.2,cpe:2.3:a:clojure:clojure:0.7.2:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,17,,,,,,,,
core.specs.alpha-0.2.62.jar,/home/runner/.m2/repository/org/clojure/core.specs.alpha/0.2.62/core.specs.alpha-0.2.62.jar,Specs for clojure.core,Eclipse Public License 1.0: http://opensource.org/licenses/eclipse-1.0.php,b1e37e6e8efdade6b7c2a4dd17c0d437,a2a7ea21a695561924bc8506f3feb5d8c8f894d5,pkg:maven/org.clojure/core.specs.alpha@0.2.62,cpe:2.3:a:clojure:clojure:0.2.62:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,17,,,,,,,,
data.csv-1.0.1.jar,/home/runner/.m2/repository/org/clojure/data.csv/1.0.1/data.csv-1.0.1.jar,A Clojure library for reading and writing comma separated value (csv) files,,96deec252fd7de263cc28a8ebeb33d6f,caa8ecf4f0db83a01481ad0734f3ad75ca421d19,pkg:maven/org.clojure/data.csv@1.0.1,cpe:2.3:a:clojure:clojure:1.0.1:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,19,,,,,,,,
data.fressian-0.2.1.jar,/home/runner/.m2/repository/org/clojure/data.fressian/0.2.1/data.fressian-0.2.1.jar,Read/write Fressian from Clojure,,e6c6a0934b95ba3b31d4fb149349e6c8,dedee6a39c20d81c14d0c1d7a1f15166749ffba8,pkg:maven/org.clojure/data.fressian@0.2.1,cpe:2.3:a:clojure:clojure:0.2.1:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,21,,,,,,,,
data.json-0.2.6.jar,/home/runner/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar,Generating/parsing JSON from/to Clojure data structures,,75475cdb5e8b3d36e633e922a5c94eab,ac3437a78d08f9db3dac7debe5a069edac282d95,pkg:maven/org.clojure/data.json@0.2.6,cpe:2.3:a:clojure:clojure:0.2.6:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,21,,,,,,,,
data.priority-map-0.0.7.jar,/home/runner/.m2/repository/org/clojure/data.priority-map/0.0.7/data.priority-map-0.0.7.jar,,,81f72216b3a2684c8e8fc632e94e7494,ededdc5d68217ffa8d24ada18bae19c352b8521b,pkg:maven/org.clojure/data.priority-map@0.0.7,cpe:2.3:a:clojure:clojure:0.0.7:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,15,,,,,,,,
jackdaw-0.8.0.jar,/home/runner/.m2/repository/fundingcircle/jackdaw/0.8.0/jackdaw-0.8.0.jar,A Clojure library for the Apache Kafka distributed streaming platform.,,940a1038f435d5c97c5d35b0822852a3,571260f0cc3d6bca0512443826ec39ac94ac348f,pkg:maven/fundingcircle/jackdaw@0.8.0,cpe:2.3:a:clojure:clojure:0.8.0:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,21,,,,,,,,
jackson-databind-2.10.5.1.jar,/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.5.1/jackson-databind-2.10.5.1.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,3aec7825a3153ea9d62582e1f6efea0b,7ff756c3af1fe95cb3cddba9158fc3289ca06387,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5.1,"cpe:2.3:a:fasterxml:jackson-databind:2.10.5.1:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.10.5.1:*:*:*:*:*:*:*",CVE-2020-36518,CWE-787 Out-of-bounds Write,jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,39,,,,,,,,
jackson-databind-2.10.5.1.jar,/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.5.1/jackson-databind-2.10.5.1.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,3aec7825a3153ea9d62582e1f6efea0b,7ff756c3af1fe95cb3cddba9158fc3289ca06387,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5.1,"cpe:2.3:a:fasterxml:jackson-databind:2.10.5.1:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.10.5.1:*:*:*:*:*:*:*",CVE-2021-46877,CWE-770 Allocation of Resources Without Limits or Throttling,jackson-databind 2.10.x through 2.12.x before 2.12.6 and 2.13.x before 2.13.1 allows attackers to cause a denial of service (2 GB transient heap usage per read) in uncommon situations involving JsonNode JDK serialization.,NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,39,,,,,,,,
jackson-databind-2.10.5.1.jar,/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.5.1/jackson-databind-2.10.5.1.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,3aec7825a3153ea9d62582e1f6efea0b,7ff756c3af1fe95cb3cddba9158fc3289ca06387,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5.1,"cpe:2.3:a:fasterxml:jackson-databind:2.10.5.1:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.10.5.1:*:*:*:*:*:*:*",CVE-2022-42003,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before versions 2.13.4.1 and 2.12.17.1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,39,,,,,,,,
jackson-databind-2.10.5.1.jar,/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.5.1/jackson-databind-2.10.5.1.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,3aec7825a3153ea9d62582e1f6efea0b,7ff756c3af1fe95cb3cddba9158fc3289ca06387,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5.1,"cpe:2.3:a:fasterxml:jackson-databind:2.10.5.1:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.10.5.1:*:*:*:*:*:*:*",CVE-2022-42004,CWE-502 Deserialization of Untrusted Data,"In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,39,,,,,,,,
jackson-databind-2.10.5.1.jar,/home/runner/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.5.1/jackson-databind-2.10.5.1.jar,General data-binding functionality for Jackson: works on core streaming API,http://www.apache.org/licenses/LICENSE-2.0.txt,3aec7825a3153ea9d62582e1f6efea0b,7ff756c3af1fe95cb3cddba9158fc3289ca06387,pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.10.5.1,"cpe:2.3:a:fasterxml:jackson-databind:2.10.5.1:*:*:*:*:*:*:*, cpe:2.3:a:fasterxml:jackson-modules-java8:2.10.5.1:*:*:*:*:*:*:*",CVE-2023-35116,CWE-770 Allocation of Resources Without Limits or Throttling,"jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor's perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.",NVD,,,,MEDIUM,4.7,CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H/E:1.0/RC:R/MAV:A,HIGH,39,,,,,,,,
java.classpath-0.3.0.jar,/home/runner/.m2/repository/org/clojure/java.classpath/0.3.0/java.classpath-0.3.0.jar,,,53b09bf4ed4bdf257235c592142662b5,6471256d09d24218a6e34dc393bec46d04a24857,pkg:maven/org.clojure/java.classpath@0.3.0,cpe:2.3:a:clojure:clojure:0.3.0:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,15,,,,,,,,
jersey-common-2.31.jar,/home/runner/.m2/repository/org/glassfish/jersey/core/jersey-common/2.31/jersey-common-2.31.jar,Jersey core common packages,"EPL 2.0: http://www.eclipse.org/legal/epl-2.0 The GNU General Public License (GPL), Version 2, With Classpath Exception: https://www.gnu.org/software/classpath/license.html Apache License, 2.0: http://www.apache.org/licenses/LICENSE-2.0.html Public Domain: https://creativecommons.org/publicdomain/zero/1.0/",4e155dab61f8761a081969692e3d4d41,b918c028c3c8c8b92a1ebb764571c369a85de04b,pkg:maven/org.glassfish.jersey.core/jersey-common@2.31,cpe:2.3:a:jersey_project:jersey:2.31:*:*:*:*:*:*:*,CVE-2021-28168,CWE-378 Creation of Temporary File With Insecure Permissions,"Eclipse Jersey 2.28 to 2.33 and Eclipse Jersey 3.0.0 to 3.0.1 contains a local information disclosure vulnerability. This is due to the use of the File.createTempFile which creates a file inside of the system temporary directory with the permissions: -rw-r--r--. Thus the contents of this file are viewable by all other users locally on the system. As such, if the contents written is security sensitive, it can be disclosed to other local users.",OSSINDEX,,,,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N,HIGH,29,,,,,,,,
jmh-clojure-0.4.1.jar,/home/runner/.m2/repository/jmh-clojure/jmh-clojure/0.4.1/jmh-clojure-0.4.1.jar,"Benchmarking with JMH, the Java Microbenchmark Harness, from Clojure.",Eclipse Public License: http://www.eclipse.org/legal/epl-v10.html,f020489c5741368e1b03c18502a3cbbb,1b171f8ed32cf79094d1c87b6a4197932a0671d5,pkg:maven/jmh-clojure/jmh-clojure@0.4.1,cpe:2.3:a:clojure:clojure:0.4.1:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,19,,,,,,,,
kafka-clients-2.8.0.jar,/home/runner/.m2/repository/org/apache/kafka/kafka-clients/2.8.0/kafka-clients-2.8.0.jar,,"The Apache Software License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0.txt",e57ddd02a349770f42d4019e85097dc8,a4f66ca79617470d1355b809675313619bbae45a,pkg:maven/org.apache.kafka/kafka-clients@2.8.0,cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*,CVE-2023-25194,CWE-502 Deserialization of Untrusted Data,"A possible security vulnerability has been identified in Apache Kafka Connect API. This requires access to a Kafka Connect worker, and the ability to create/modify connectors on it with an arbitrary Kafka client SASL JAAS config and a SASL-based security protocol, which has been possible on Kafka Connect clusters since Apache Kafka Connect 2.3.0. When configuring the connector via the Kafka Connect REST API, an authenticated operator can set the `sasl.jaas.config` property for any of the connector's Kafka clients to ""com.sun.security.auth.module.JndiLoginModule"", which can be done via the `producer.override.sasl.jaas.config`, `consumer.override.sasl.jaas.config`, or `admin.override.sasl.jaas.config` properties. This will allow the server to connect to the attacker's LDAP server and deserialize the LDAP response, which the attacker can use to execute java deserialization gadget chains on the Kafka connect server. Attacker can cause unrestricted deserialization of untrusted data (or) RCE vulnerability when there are gadgets in the classpath.  Since Apache Kafka 3.0.0, users are allowed to specify these properties in connector configurations for Kafka Connect clusters running with out-of-the-box configurations. Before Apache Kafka 3.0.0, users may not specify these properties unless the Kafka Connect cluster has been reconfigured with a connector client override policy that permits them.  Since Apache Kafka 3.4.0, we have added a system property (""-Dorg.apache.kafka.disallowed.login.modules"") to disable the problematic login modules usage in SASL JAAS configuration. Also by default ""com.sun.security.auth.module.JndiLoginModule"" is disabled in Apache Kafka Connect 3.4.0.   We advise the Kafka Connect users to validate connector configurations and only allow trusted JNDI configurations. Also examine connector dependencies for  vulnerable versions and either upgrade their connectors, upgrading that specific dependency, or removing the connectors as options for remediation. Finally, in addition to leveraging the ""org.apache.kafka.disallowed.login.modules"" system property, Kafka Connect users can also implement their own connector client config override policy, which can be used to control which Kafka client properties can be overridden directly in a connector config and which cannot.   Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2023-25194 for details",OSSINDEX,,,,HIGH,8.800000190734863,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H,HIGH,23,,,,,,,,
kafka-clients-2.8.0.jar,/home/runner/.m2/repository/org/apache/kafka/kafka-clients/2.8.0/kafka-clients-2.8.0.jar,,"The Apache Software License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0.txt",e57ddd02a349770f42d4019e85097dc8,a4f66ca79617470d1355b809675313619bbae45a,pkg:maven/org.apache.kafka/kafka-clients@2.8.0,cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*,CVE-2022-34917,"CWE-789 Memory Allocation with Excessive Size Value, CWE-770 Allocation of Resources Without Limits or Throttling","A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,23,,,,,,,,
kafka-clients-2.8.0.jar,/home/runner/.m2/repository/org/apache/kafka/kafka-clients/2.8.0/kafka-clients-2.8.0.jar,,"The Apache Software License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0.txt",e57ddd02a349770f42d4019e85097dc8,a4f66ca79617470d1355b809675313619bbae45a,pkg:maven/org.apache.kafka/kafka-clients@2.8.0,cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*,CVE-2021-38153,CWE-203 Observable Discrepancy,"Some components in Apache Kafka use `Arrays.equals` to validate a password or key, which is vulnerable to timing attacks that make brute force attacks for such credentials more likely to be successful. Users should upgrade to 2.8.1 or higher, or 3.0.0 or higher where this vulnerability has been fixed. The affected versions include Apache Kafka 2.0.0, 2.0.1, 2.1.0, 2.1.1, 2.2.0, 2.2.1, 2.2.2, 2.3.0, 2.3.1, 2.4.0, 2.4.1, 2.5.0, 2.5.1, 2.6.0, 2.6.1, 2.6.2, 2.7.0, 2.7.1, and 2.8.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A,HIGH,23,,,,,,,,
kafka-streams-2.8.0.jar,/home/runner/.m2/repository/org/apache/kafka/kafka-streams/2.8.0/kafka-streams-2.8.0.jar,,"The Apache Software License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0.txt",d970c063d51ff97dd34b0cf43e51a13e,c2f9c2bab48a3f62e7a61f51cc5d26d5c8b4a88c,pkg:maven/org.apache.kafka/kafka-streams@2.8.0,cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*,CVE-2022-34917,"CWE-789 Memory Allocation with Excessive Size Value, CWE-770 Allocation of Resources Without Limits or Throttling","A security vulnerability has been identified in Apache Kafka. It affects all releases since 2.8.0. The vulnerability allows malicious unauthenticated clients to allocate large amounts of memory on brokers. This can lead to brokers hitting OutOfMemoryException and causing denial of service. Example scenarios: - Kafka cluster without authentication: Any clients able to establish a network connection to a broker can trigger the issue. - Kafka cluster with SASL authentication: Any clients able to establish a network connection to a broker, without the need for valid SASL credentials, can trigger the issue. - Kafka cluster with TLS authentication: Only clients able to successfully authenticate via TLS can trigger the issue. We advise the users to upgrade the Kafka installations to one of the 3.2.3, 3.1.2, 3.0.2, 2.8.2 versions.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,23,,,,,,,,
kafka-streams-2.8.0.jar,/home/runner/.m2/repository/org/apache/kafka/kafka-streams/2.8.0/kafka-streams-2.8.0.jar,,"The Apache Software License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0.txt",d970c063d51ff97dd34b0cf43e51a13e,c2f9c2bab48a3f62e7a61f51cc5d26d5c8b4a88c,pkg:maven/org.apache.kafka/kafka-streams@2.8.0,cpe:2.3:a:apache:kafka:2.8.0:*:*:*:*:*:*:*,CVE-2021-38153,CWE-203 Observable Discrepancy,"Some components in Apache Kafka use `Arrays.equals` to validate a password or key, which is vulnerable to timing attacks that make brute force attacks for such credentials more likely to be successful. Users should upgrade to 2.8.1 or higher, or 3.0.0 or higher where this vulnerability has been fixed. The affected versions include Apache Kafka 2.0.0, 2.0.1, 2.1.0, 2.1.1, 2.2.0, 2.2.1, 2.2.2, 2.3.0, 2.3.1, 2.4.0, 2.4.1, 2.5.0, 2.5.1, 2.6.0, 2.6.1, 2.6.2, 2.7.0, 2.7.1, and 2.8.0.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.9,CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N/E:2.2/RC:R/MAV:A,HIGH,23,,,,,,,,
math.combinatorics-0.1.6.jar,/home/runner/.m2/repository/org/clojure/math.combinatorics/0.1.6/math.combinatorics-0.1.6.jar,,,c89c9887229a275755c7d0ebf33dae00,f835ff03b6204d7ae94cf6dddedf91d2789d47b2,pkg:maven/org.clojure/math.combinatorics@0.1.6,cpe:2.3:a:clojure:clojure:0.1.6:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,15,,,,,,,,
mulog-prometheus-0.8.2.jar,/home/runner/.m2/repository/com/brunobonacci/mulog-prometheus/0.8.2/mulog-prometheus-0.8.2.jar,A publisher for μ/log to Prometheus.,Apache License 2.0: http://www.apache.org/licenses/LICENSE-2.0,6ad3f44b1bc4940acebbc6a3e8707b2f,5c9d9164f8a646b152f4ffd18a006417ef9559e6,pkg:maven/com.brunobonacci/mulog-prometheus@0.8.2,cpe:2.3:a:prometheus:prometheus:0.8.2:*:*:*:*:*:*:*,CVE-2019-3826,CWE-79 Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),"A stored, DOM based, cross-site scripting (XSS) flaw was found in Prometheus before version 2.7.1. An attacker could exploit this by convincing an authenticated user to visit a crafted URL on a Prometheus server, allowing for the execution and persistent storage of arbitrary scripts.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.1,CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:2.8/RC:R/MAV:A,HIGH,15,,,,,,,,
netty-codec-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-codec/4.1.63.Final/netty-codec-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,e67c68c02244a036e4ec8c838783d1ce,d4d2fccea88c80e56d59ce1053c53df0f9f4f5db,pkg:maven/io.netty/netty-codec@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2021-37136,CWE-400 Uncontrolled Resource Consumption,The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,31,,,,,,,,
netty-codec-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-codec/4.1.63.Final/netty-codec-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,e67c68c02244a036e4ec8c838783d1ce,d4d2fccea88c80e56d59ce1053c53df0f9f4f5db,pkg:maven/io.netty/netty-codec@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2021-37137,CWE-400 Uncontrolled Resource Consumption,The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,31,,,,,,,,
netty-codec-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-codec/4.1.63.Final/netty-codec-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,e67c68c02244a036e4ec8c838783d1ce,d4d2fccea88c80e56d59ce1053c53df0f9f4f5db,pkg:maven/io.netty/netty-codec@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2022-41881,CWE-674 Uncontrolled Recursion,"Netty project is an event-driven asynchronous network application framework. In versions prior to 4.1.86.Final, a StackOverflowError can be raised when parsing a malformed crafted message due to an infinite recursion. This issue is patched in version 4.1.86.Final. There is no workaround, except using a custom HaProxyMessageDecoder.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,31,,,,,,,,
netty-codec-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-codec/4.1.63.Final/netty-codec-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,e67c68c02244a036e4ec8c838783d1ce,d4d2fccea88c80e56d59ce1053c53df0f9f4f5db,pkg:maven/io.netty/netty-codec@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2023-44487,CWE-400 Uncontrolled Resource Consumption,"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,31,IETF,HTTP/2,HTTP/2 Rapid Reset Attack Vulnerability,2023-10-10,HTTP/2 contains a rapid reset vulnerability that allows for a distributed denial-of-service attack (DDoS).,Apply mitigations per vendor instructions or discontinue use of the product if mitigations are unavailable.,2023-10-31,https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/
netty-codec-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-codec/4.1.63.Final/netty-codec-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,e67c68c02244a036e4ec8c838783d1ce,d4d2fccea88c80e56d59ce1053c53df0f9f4f5db,pkg:maven/io.netty/netty-codec@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2021-43797,CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling'),"Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to ""sanitize"" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N/E:2.8/RC:R/MAV:A,HIGH,31,,,,,,,,
netty-codec-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-codec/4.1.63.Final/netty-codec-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,e67c68c02244a036e4ec8c838783d1ce,d4d2fccea88c80e56d59ce1053c53df0f9f4f5db,pkg:maven/io.netty/netty-codec@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2022-41915,CWE-113 Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting'),"Netty project is an event-driven asynchronous network application framework. Starting in version 4.1.83.Final and prior to 4.1.86.Final, when calling `DefaultHttpHeadesr.set` with an _iterator_ of values, header value validation was not performed, allowing malicious header values in the iterator to perform HTTP Response Splitting. This issue has been patched in version 4.1.86.Final. Integrators can work around the issue by changing the `DefaultHttpHeaders.set(CharSequence, Iterator<?>)` call, into a `remove()` call, and call `add()` in a loop over the iterator of values.  Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2022-41915 for details",OSSINDEX,,,,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N,HIGH,31,,,,,,,,
netty-codec-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-codec/4.1.63.Final/netty-codec-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,e67c68c02244a036e4ec8c838783d1ce,d4d2fccea88c80e56d59ce1053c53df0f9f4f5db,pkg:maven/io.netty/netty-codec@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2023-34462,"CWE-400 Uncontrolled Resource Consumption, CWE-770 Allocation of Resources Without Limits or Throttling","Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap. The `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. Normally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`. This vulnerability has been fixed in version 4.1.94.Final.",NVD,,,,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A,HIGH,31,,,,,,,,
netty-codec-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-codec/4.1.63.Final/netty-codec-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,e67c68c02244a036e4ec8c838783d1ce,d4d2fccea88c80e56d59ce1053c53df0f9f4f5db,pkg:maven/io.netty/netty-codec@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2022-24823,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Insecure Permissions, CWE-668 Exposure of Resource to Wrong Sphere","Netty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one's own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N/E:1.8/RC:R/MAV:A,HIGH,31,,,,,,,,
netty-transport-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.63.Final/netty-transport-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,a40109a795b224dbac09b285f057dbd7,09a8bbe1ba082c9434e6f524d3864a53f340f2df,pkg:maven/io.netty/netty-transport@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2021-37136,CWE-400 Uncontrolled Resource Consumption,The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,29,,,,,,,,
netty-transport-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.63.Final/netty-transport-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,a40109a795b224dbac09b285f057dbd7,09a8bbe1ba082c9434e6f524d3864a53f340f2df,pkg:maven/io.netty/netty-transport@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2021-37137,CWE-400 Uncontrolled Resource Consumption,The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.,NVD,MEDIUM,5.0,/AV:N/AC:L/Au:N/C:N/I:N/A:P,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,29,,,,,,,,
netty-transport-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.63.Final/netty-transport-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,a40109a795b224dbac09b285f057dbd7,09a8bbe1ba082c9434e6f524d3864a53f340f2df,pkg:maven/io.netty/netty-transport@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2022-41881,CWE-674 Uncontrolled Recursion,"Netty project is an event-driven asynchronous network application framework. In versions prior to 4.1.86.Final, a StackOverflowError can be raised when parsing a malformed crafted message due to an infinite recursion. This issue is patched in version 4.1.86.Final. There is no workaround, except using a custom HaProxyMessageDecoder.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,29,,,,,,,,
netty-transport-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.63.Final/netty-transport-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,a40109a795b224dbac09b285f057dbd7,09a8bbe1ba082c9434e6f524d3864a53f340f2df,pkg:maven/io.netty/netty-transport@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2023-44487,CWE-400 Uncontrolled Resource Consumption,"The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,29,IETF,HTTP/2,HTTP/2 Rapid Reset Attack Vulnerability,2023-10-10,HTTP/2 contains a rapid reset vulnerability that allows for a distributed denial-of-service attack (DDoS).,Apply mitigations per vendor instructions or discontinue use of the product if mitigations are unavailable.,2023-10-31,https://blog.cloudflare.com/technical-breakdown-http2-rapid-reset-ddos-attack/
netty-transport-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.63.Final/netty-transport-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,a40109a795b224dbac09b285f057dbd7,09a8bbe1ba082c9434e6f524d3864a53f340f2df,pkg:maven/io.netty/netty-transport@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2021-43797,CWE-444 Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling'),"Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to ""sanitize"" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.",NVD,MEDIUM,4.3,/AV:N/AC:M/Au:N/C:N/I:P/A:N,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N/E:2.8/RC:R/MAV:A,HIGH,29,,,,,,,,
netty-transport-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.63.Final/netty-transport-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,a40109a795b224dbac09b285f057dbd7,09a8bbe1ba082c9434e6f524d3864a53f340f2df,pkg:maven/io.netty/netty-transport@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2023-34462,"CWE-400 Uncontrolled Resource Consumption, CWE-770 Allocation of Resources Without Limits or Throttling","Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. The `SniHandler` can allocate up to 16MB of heap for each channel during the TLS handshake. When the handler or the channel does not have an idle timeout, it can be used to make a TCP server using the `SniHandler` to allocate 16MB of heap. The `SniHandler` class is a handler that waits for the TLS handshake to configure a `SslHandler` according to the indicated server name by the `ClientHello` record. For this matter it allocates a `ByteBuf` using the value defined in the `ClientHello` record. Normally the value of the packet should be smaller than the handshake packet but there are not checks done here and the way the code is written, it is possible to craft a packet that makes the `SslClientHelloHandler`. This vulnerability has been fixed in version 4.1.94.Final.",NVD,,,,MEDIUM,6.5,CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H/E:2.8/RC:R/MAV:A,HIGH,29,,,,,,,,
netty-transport-4.1.63.Final.jar,/home/runner/.m2/repository/io/netty/netty-transport/4.1.63.Final/netty-transport-4.1.63.Final.jar,Netty is an asynchronous event-driven network application framework for    rapid development of maintainable high performance protocol servers and    clients.,https://www.apache.org/licenses/LICENSE-2.0,a40109a795b224dbac09b285f057dbd7,09a8bbe1ba082c9434e6f524d3864a53f340f2df,pkg:maven/io.netty/netty-transport@4.1.63.Final,cpe:2.3:a:netty:netty:4.1.63:*:*:*:*:*:*:*,CVE-2022-24823,"CWE-378 Creation of Temporary File With Insecure Permissions, CWE-379 Creation of Temporary File in Directory with Insecure Permissions, CWE-668 Exposure of Resource to Wrong Sphere","Netty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one's own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.",NVD,LOW,1.9,/AV:L/AC:M/Au:N/C:P/I:N/A:N,MEDIUM,5.5,CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N/E:1.8/RC:R/MAV:A,HIGH,29,,,,,,,,
snappy-java-1.1.8.1.jar,/home/runner/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.1/snappy-java-1.1.8.1.jar,snappy-java: A fast compression/decompression library,Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0.html,6b9c4f220701bb7c39d0843095bb3402,d30aaf4d41d6ff0c760c8931d3b8dafc0293c91a,pkg:maven/org.xerial.snappy/snappy-java@1.1.8.1,cpe:2.3:a:xerial:snappy-java:1.1.8.1:*:*:*:*:*:*:*,CVE-2023-34453,CWE-190 Integer Overflow or Wraparound,"snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error.  The function `shuffle(int[] input)` in the file `BitShuffle.java` receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a `java.lang.NegativeArraySizeException` exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as `java.lang.ArrayIndexOutOfBoundsException`.  The same issue exists also when using the `shuffle` functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.  Version 1.1.10.1 contains a patch for this vulnerability.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,48,,,,,,,,
snappy-java-1.1.8.1.jar,/home/runner/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.1/snappy-java-1.1.8.1.jar,snappy-java: A fast compression/decompression library,Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0.html,6b9c4f220701bb7c39d0843095bb3402,d30aaf4d41d6ff0c760c8931d3b8dafc0293c91a,pkg:maven/org.xerial.snappy/snappy-java@1.1.8.1,cpe:2.3:a:xerial:snappy-java:1.1.8.1:*:*:*:*:*:*:*,CVE-2023-34454,CWE-190 Integer Overflow or Wraparound,"snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing an unrecoverable fatal error.  The function `compress(char[] input)` in the file `Snappy.java` receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the rawCompress` function.  Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array.  Since the maxCompressedLength function treats the length as an unsigned integer, it doesn���t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a `java.lang.NegativeArraySizeException` exception will be raised while trying to allocate the array `buf`. On the other side, if the result is positive, the `buf` array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error.  The same issue exists also when using the `compress` functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won���t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place.  Version 1.1.10.1 contains a patch for this issue.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,48,,,,,,,,
snappy-java-1.1.8.1.jar,/home/runner/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.1/snappy-java-1.1.8.1.jar,snappy-java: A fast compression/decompression library,Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0.html,6b9c4f220701bb7c39d0843095bb3402,d30aaf4d41d6ff0c760c8931d3b8dafc0293c91a,pkg:maven/org.xerial.snappy/snappy-java@1.1.8.1,cpe:2.3:a:xerial:snappy-java:1.1.8.1:*:*:*:*:*:*:*,CVE-2023-34455,CWE-770 Allocation of Resources Without Limits or Throttling,"snappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1.  The code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn���t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk.  In the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesn���t test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error.  Version 1.1.10.1 contains a patch for this issue.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,48,,,,,,,,
snappy-java-1.1.8.1.jar,/home/runner/.m2/repository/org/xerial/snappy/snappy-java/1.1.8.1/snappy-java-1.1.8.1.jar,snappy-java: A fast compression/decompression library,Apache-2.0: https://www.apache.org/licenses/LICENSE-2.0.html,6b9c4f220701bb7c39d0843095bb3402,d30aaf4d41d6ff0c760c8931d3b8dafc0293c91a,pkg:maven/org.xerial.snappy/snappy-java@1.1.8.1,cpe:2.3:a:xerial:snappy-java:1.1.8.1:*:*:*:*:*:*:*,CVE-2023-43642,CWE-770 Allocation of Resources Without Limits or Throttling,"snappy-java is a Java port of the snappy, a fast C++ compresser/decompresser developed by Google. The SnappyInputStream was found to be vulnerable to Denial of Service (DoS) attacks when decompressing data with a too large chunk size. Due to missing upper bound check on chunk length, an unrecoverable fatal error can occur. All versions of snappy-java including the latest released version 1.1.10.3 are vulnerable to this issue. A fix has been introduced in commit `9f8c3cf74` which will be included in the 1.1.10.4 release. Users are advised to upgrade. Users unable to upgrade should only accept compressed data from trusted sources.",NVD,,,,HIGH,7.5,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H/E:3.9/RC:R/MAV:A,HIGH,48,,,,,,,,
spec.alpha-0.3.218.jar,/home/runner/.m2/repository/org/clojure/spec.alpha/0.3.218/spec.alpha-0.3.218.jar,Specification of data and functions,Eclipse Public License 1.0: http://opensource.org/licenses/eclipse-1.0.php,ecdbb58e7a95163c1369ef9fa054013d,a7dad492f8d6cf657d82dcd6b31bda0899f1ac0e,pkg:maven/org.clojure/spec.alpha@0.3.218,cpe:2.3:a:clojure:clojure:0.3.218:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,26,,,,,,,,
test.check-1.1.0.jar,/home/runner/.m2/repository/org/clojure/test.check/1.1.0/test.check-1.1.0.jar,A QuickCheck inspired property-based testing library,Eclipse Public License 1.0: http://opensource.org/licenses/eclipse-1.0.php,b097c23224b7d9939670e433a478195b,cdf224607aaed0c087eda05fd87144b86242366c,pkg:maven/org.clojure/test.check@1.1.0,cpe:2.3:a:clojure:clojure:1.1.0:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,19,,,,,,,,
tools.logging-0.4.1.jar,/home/runner/.m2/repository/org/clojure/tools.logging/0.4.1/tools.logging-0.4.1.jar,,,fa10087f7236e1a40aac0c4d63d4bdb8,991bebc6e3633b85091ae929d62c116a2584aee7,pkg:maven/org.clojure/tools.logging@0.4.1,cpe:2.3:a:clojure:clojure:0.4.1:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,15,,,,,,,,
tools.namespace-0.2.11.jar,/home/runner/.m2/repository/org/clojure/tools.namespace/0.2.11/tools.namespace-0.2.11.jar,,,45d4451fb8c9c48b9e641cb401e52632,d2c74b36d3d9b4a8d982c52001365885aabddba7,pkg:maven/org.clojure/tools.namespace@0.2.11,cpe:2.3:a:clojure:clojure:0.2.11:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,17,,,,,,,,
tools.reader-1.3.4.jar,/home/runner/.m2/repository/org/clojure/tools.reader/1.3.4/tools.reader-1.3.4.jar,A Clojure reader in Clojure,Eclipse Public License 1.0: http://opensource.org/licenses/eclipse-1.0.php,bf0ee7a4b8c6307b2e76135c46ff5b46,edd15ac0f3bbd862106bb6ba74797f0cdf57b655,pkg:maven/org.clojure/tools.reader@1.3.4,cpe:2.3:a:clojure:clojure:1.3.4:*:*:*:*:*:*:*,CVE-2017-20189,CWE-502 Deserialization of Untrusted Data,"In Clojure before 1.9.0, classes can be used to construct a serialized object that executes arbitrary code upon deserialization. This is relevant if a server deserializes untrusted objects.",NVD,,,,CRITICAL,9.8,CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H/E:3.9/RC:R/MAV:A,HIGH,19,,,,,,,,
