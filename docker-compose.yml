version: '3.4'
services:
  zookeeper:
    image: zookeeper:3.7.0
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 1235:1235
    environment:
      # In your host file, add:
      # ```
      # 127.0.0.1 kubernetes.docker.internal
      # ```
      KAFKA_ADVERTISED_HOST_NAME: 'kubernetes.docker.internal'
      #KAFKA_ADVERTISED_HOST_NAME: ${HOST_NAME}
      # Alternatively, comment the upper line and use an environment variable.
      # ```
      # echo HOST_NAME=$(ipconfig getifaddr en0) > .env
      # ```
      # <env>.<namespace>.<entity>[.<ver>][.<format>][.compacted]
      KAFKA_CREATE_TOPICS: 'local.tsv-processing.tsv-line.edn:3:1,local.tsv-processing.output.edn:3:1'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true' # Non-production compatible, but we stay local so we don't care.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      EXTRA_ARGS: "-javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.12.0.jar=1235:/opt/prometheus/kafka_broker.yml"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dev-resources/jmx-monitoring-stacks/shared-assets/jmx-exporter:/opt/prometheus:rx

  kafka-lag-exporter:
    image: lightbend/kafka-lag-exporter:0.5.5
    ports:
      - 8000:8000
    depends_on:
      - kafka
    environment:
      CONFIG_FILE: /opt/docker/conf/application.conf
    volumes:
      - ./dev-resources/kafka-lag-exporter:/opt/docker/conf

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.5
    depends_on:
      - zookeeper
      - kafka
    ports:
      - 8081:8081
      - 1236:1236
    environment:
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_ZK_NAMESPACE: 'schema-registry'
      EXTRA_ARGS: -javaagent:/opt/prometheus/jmx_prometheus_javaagent-0.12.0.jar=1236:/opt/prometheus/confluent_schemaregistry.yml
    volumes:
      - ./dev-resources/jmx-monitoring-stacks/shared-assets/jmx-exporter:/opt/prometheus:rx

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./dev-resources/monitoring/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro

  pushgateway:
    image: prom/pushgateway:latest
    ports:
      - 9091:9091

  grafana:
    image: grafana/grafana:latest
    environment:
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'admin'
      GF_USERS_ALLOW_SIGN_UP: 'false'
    depends_on:
      - prometheus
      - pushgateway
    volumes:
      - ./dev-resources/monitoring/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./dev-resources/monitoring/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./dev-resources/monitoring/Kafka_Lag_Exporter_Dashboard.json:/etc/dashboards/Kafka_Lag_Exporter_Dashboard.json:rw
      - ./dev-resources/monitoring/confluent-open-source-grafana-dashboard.json:/etc/dashboards/confluent-open-source-grafana-dashboard.json:rw
    ports:
      - 3000:3000

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.18.0
    hostname: ksqldb-server
    depends_on:
      - kafka
    ports:
      - 8088:8088
    environment:
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true" # Non-production friendly, but we stay local so we don't care.
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true" # Non-production friendly, but we stay local so we don't care.
      KSQL_OPTS: -javaagent:/usr/share/jmx-exporter/jmx_prometheus_javaagent-0.12.0.jar=1237:/usr/share/jmx-exporter/confluent_ksql.yml
    volumes:
      - ./dev-resources/jmx-monitoring-stacks/shared-assets/jmx-exporter:/usr/share/jmx-exporter/:rx

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.18.0
    container_name: ksqldb-cli
    depends_on:
      - kafka
      - ksqldb-server
    entrypoint: /bin/sh
    environment:
      CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
    tty: true
